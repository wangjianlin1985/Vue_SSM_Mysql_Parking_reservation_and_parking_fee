<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.chengxusheji.mapper.RegionMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加区域记录 -->
	<insert id="addRegion" parameterType="region">
		insert into t_region(regionFloor,regionName,regionDesc) values 
		(#{regionFloor},#{regionName},#{regionDesc})
	</insert>

	<!-- 按照查询条件分页查询区域记录 -->
	<select id="queryRegion" resultMap="regionMap" >
		select t_region.* from t_region ${where} limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="regionMap" type="region">
        <id property="regionId" column="regionId" />
    </resultMap>

    <!-- 按照查询条件查询所有区域记录 -->
	<select id="queryRegionList" resultMap="regionMap" >
		select t_region.* from t_region ${where}
	</select>

    <!-- 按照查询条件的区域记录数 -->
	<select id="queryRegionCount" resultType="int">
		select count(*) from t_region ${where}
	</select>

	<!-- 根据主键查询某个区域记录 -->
	<select id="getRegion" parameterType="int" resultMap="regionMap">
		select * from t_region where t_region.regionId = #{regionId}
	</select>

	<!-- 更新区域记录 -->
	<update id="updateRegion" parameterType="region">
		update t_region set regionFloor=#{regionFloor},regionName=#{regionName},regionDesc=#{regionDesc} where regionId = #{regionId}
	</update>

	<!-- 删除区域记录 -->
	<delete id="deleteRegion" parameterType="int">
		delete from t_region where regionId=#{regionId}
	</delete>

</mapper>
